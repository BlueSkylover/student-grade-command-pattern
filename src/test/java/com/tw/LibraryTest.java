package com.tw;/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import org.junit.Test;

import java.util.LinkedList;

import static org.junit.Assert.*;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class LibraryTest {
    Library library=new Library();
    @Test
    public void testSomeLibraryMethod() {
        Library classUnderTest = new Library();
        assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
    }

    @Test
    public void testMockClass() throws Exception {
        // you can mock concrete classes, not only interfaces
        LinkedList mockedList = mock(LinkedList.class);

        // stubbing appears before the actual execution
        String value = "first";
        when(mockedList.get(0)).thenReturn(value);

        assertEquals(mockedList.get(0), value);

    }
    @Test
    public void checkStudentInfoWrong() {
        String student_info1="AA,1234,数学:99,语文:99,英语:99,其他:99";
        String student_info2="AA,0001,汉族,1201,数学:95,语文:86,英语:88,编程:98";

        assertEquals("wrong", library.checkStudentInfo(student_info1));
        assertEquals("true", library.checkStudentInfo(student_info2));
//测试Student函数和Score函数
        Score score=new Score("数学:95,语文:86,英语:88,编程:98");
        Student student1=new Student("AA","1234","汉族","1201",score);
        assertEquals(student1.getName(),"AA");
        assertEquals(student1.getKlass(),"1201");
        assertEquals(student1.getSno(),"1234");
        assertEquals(student1.getNationality(),"汉族");
        assertEquals(student1.getScore().getMath(),"95");
        assertEquals(student1.getScore().getChinese(),"86");
        assertEquals(student1.getScore().getEnglish(),"88");
        assertEquals(student1.getScore().getProgramming(),"98");
        assertEquals(String.valueOf(student1.getScore().getTotalScore()),"367.0");
    }
}
