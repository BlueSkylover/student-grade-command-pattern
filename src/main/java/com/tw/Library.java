package com.tw;

import java.util.*;
import java.util.regex.Pattern;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Library {
    public boolean someLibraryMethod() {
        return true;
    }
    //存储学生信息
    Map<String,Student> student=new HashMap<>();
    public  static void  main(String[] args){
        Library library=new Library();
        library.beginProgram();
    }
    public  void beginProgram(){
        //输出总菜单
        printMainmMnue();
        int choose=getInputNumber();
        while (choose!=3){
            if(choose==1)
            {
                getStudentInfo();
                printMainmMnue();
                choose = getInputNumber();
            }
            else if(choose==2){
                System.out.print("请输入要打印的学生的学号（格式：学号，学号，...），按回车提交：");
                Scanner input=new Scanner(System.in);
                String stu_sno_Info=input.nextLine();
                String[] sno=stu_sno_Info.split(",");
                Pattern pattern=Pattern.compile("[0-9]*");
                boolean flag=true;
                for(int i=0;i<sno.length;i++)
                {
                    if(pattern.matcher(sno[i]).matches()) {
                        continue;
                    }
                    else {
                        flag=false;
                        System.out.print("请按正确的格式输入要打印的学生的学号（格式：学号，学号，...）,按回车提交：");
                        stu_sno_Info=input.nextLine();
                    }
                }
                if(flag){
                    System.out.println(printreport(stu_sno_Info));
                    printMainmMnue();
                    choose=getInputNumber();

                }
            }
        }
    }
    private void printMainmMnue(){
        System.out.println("1.添加学生成绩");
        System.out.println("2.生成成绩单");
        System.out.println("3.退出");
        System.out.println("请输入你的选择（1～3）：");
    }
    //验证用户的输入的序号是否正确
    public boolean checkInputNumber(String input){
        boolean flag;
        flag=false;
        if(input.matches("[0-9]+")){
            int i=Integer.valueOf(input);
            if(i>=1 && i<=3)
                flag=true;
        }
        return flag;
    }
    private int getInputNumber(){
        Scanner input=new Scanner(System.in);
        String i=input.nextLine();
        while(checkInputNumber(i)!=true)
        {
            System.out.print("请按正确的格式输入你的选择（1～3）:");
            i=input.nextLine();
        }
        int num=Integer.valueOf(i);
        return  num;
    }

    //检查添加学生的信息是否符合格式
    public String checkStudentInfo(String studentInfo){
        String[] info=studentInfo.split(",");  //以“，”为分隔符将输入的字符串存入info数组
        String result="right";
        String str1="";
        if(info.length!=8) {
            result = "wrong";
//            System.out.println("输入的信息不充足");
        }
        else {
                str1+=info[1]+info[3];
                Pattern pattern=Pattern.compile("-?[0-9]+.?[0-9]+");
                String[] subject=info[4].split(":");
                if(subject[0].equals("数学"))
                {
                    subject=info[5].split(":");
                    str1+=subject[1];
                    if(subject[0].equals("语文"))
                    {
                        subject=info[6].split(":");
                        str1+=subject[1];
                        if(subject[0].equals("英语"))
                        {
                            subject=info[7].split(":");
                            str1+=subject[1];
                            if(subject[0].equals("编程")){
                                str1+=subject[1];
                                if(pattern.matcher(str1).matches())
                                    result="true";
                                else {
                                    result = "wrong";
//                                    System.out.println("数字格式不对");
                                }
                            }
//                            else
//                                System.out.println("编程格式出错");
                        }
//                        else
//                            System.out.println("英语格式出错");
                    }
//                    else
//                        System.out.println("语文格式出错");
                }
//                else
//                    System.out.println("数学格式出错");
            }
        return result;
        }
    private void getStudentInfo(){
        boolean flag = true;
        System.out.print("请输入学生信息（格式：姓名, 学号, 民族, 班级, 学科: 成绩, ...），按回车提交:");
        Scanner input = new Scanner(System.in);
        String studentInfo = input.nextLine();//获取用户输入的学生信息
        Student student2;
        while (flag) {
            if ((checkStudentInfo(studentInfo)) == "wrong") {
                System.out.print("请按正确的格式输入（格式：姓名, 学号, 民族, 班级, 学科: 成绩, ...），按回车提交：");
                studentInfo = input.nextLine();
            }else{
                String[] info=studentInfo.split(",");  //以“，”为分隔符将输入的字符串存入info数组
                String name=info[0];
                String sno=info[1];
                String nationality=info[2];
                String klass=info[3];
                Score score=new Score(info[4]+','+info[5]+','+info[6]+','+info[7]);
                student2=new Student(name,sno,nationality,klass,score);
                System.out.print("学生" + student2.getName()+ "的成绩被添加\n");
                student.put(sno,student2);
                flag=false;
                }
            }
        }
    public String printreport(String stu_sno_Info) {
        String result="";
        Map<String, Integer> addPointsMap = new HashMap<>();//存放加分策略
        List<Double> totalScoreList=new ArrayList<>();  //存放每个人的总成绩
        List<String> minority=new ArrayList<>();//存放少数民族

        addPointsMap.put("少数民族",10);
        addPointsMap.put("体育特长", 20);
        addPointsMap.put("艺术特长", 15);

        minority.add("壮族");
        minority.add("回族");
        minority.add("满族");
        minority.add("维吾尔族");
        minority.add("苗族");
        minority.add("彝族");
        minority.add("土家族");
        minority.add("藏族");
        minority.add("蒙古族");
        minority.add("侗族");
        minority.add("布依族");
        minority.add("瑶族");
        minority.add("白族");
        minority.add("朝鲜族");
        minority.add("哈尼族");
        minority.add("黎族");
        minority.add("哈萨克族");
        minority.add("傣族");
        minority.add("畲族");
        minority.add("傈僳族");
        minority.add("东乡族");
        minority.add("仡佬族");
        minority.add("拉祜族");
        minority.add("佤族");
        minority.add("水族");
        minority.add("纳西族");
        minority.add("羌族");
        minority.add("土族");
        minority.add("仫佬族");
        minority.add("锡伯族");
        minority.add("柯尔克孜族");
        minority.add("景颇族");
        minority.add("达斡尔族");
        minority.add("撒拉族");
        minority.add("布朗族");
        minority.add("毛南族");
        minority.add("塔吉克族");
        minority.add("普米族");
        minority.add("阿昌族");
        minority.add("怒族");
        minority.add("鄂温克族");
        minority.add("京族");
        minority.add("基诺族");
        minority.add("德昂族");
        minority.add("德昂族");
        minority.add("保安族");
        minority.add("俄罗斯族");
        minority.add("乌孜别克族");
        minority.add("门巴族");
        minority.add("鄂伦春族");
        minority.add("独龙族");
        minority.add("赫哲族");
        minority.add("高山族");
        minority.add("珞巴族");
        minority.add("塔塔尔族");

        result="成绩单\n";
        result+="姓名|数学|语文|英语|编程|平均分|总分\n";
        result+="========================\n";

        String[] Sno=stu_sno_Info.split(",");
        for(int i=0;i<Sno.length;i++)
        {
            if(student.containsKey(Sno[i])){
               Student student2= student.get(Sno[i]);
               result+=student2.getName()+"|";
               Score score2=student2.getScore();
               result+=score2.getMath()+"|";
               result+=score2.getChinese()+"|";
               result+=score2.getEnglish()+"|";
               result+=score2.getProgramming()+"|";
               result+=score2.getAverageScore()+"|";
               double total_score=score2.getTotalScore();
               String zu=student2.getNationality();
               if(minority.contains(zu)){
                   total_score=total_score+10;
               }
               result+=total_score;
               result+="\n";
               totalScoreList.add(score2.getTotalScore());
            }
            else
                return null;
            }
        result+="========================\n";
        Collections.sort(totalScoreList);
        int num = totalScoreList.size();
        double middle =0;
        if(num==1)
        {
            middle=totalScoreList.get(0);
        }
        else if(num%2==0)
            middle=(totalScoreList.get(num/2)+totalScoreList.get(num/2-1))/2;
        else
            middle=totalScoreList.get(num/2);
        //计算平均成绩
        double sum=0.0;
        for(int i=0;i<num;i++){
            sum+=totalScoreList.get(i);
        }
        double average=0.0;
        average=sum/num;
        result+="全班总分平均数："+average+"\n";
        result+="全班总分中位数："+middle+"\n";

        return  result;

        }

}



